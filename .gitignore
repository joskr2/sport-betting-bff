# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py
.claude/

scripts/
# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# FastAPI specific
*.db
*.sqlite
*.sqlite3

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Logs
logs/
*.log
*.log.*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Local development files
.env.development
.env.staging
.env.production

# Database files
*.db
*.sqlite
*.sqlite3

# Application specific
uploads/
static/uploads/
media/

# Backup files
*.bak
*.backup
*.old

# Compressed files
*.zip
*.tar.gz
*.rar

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.yaml.local
*.yml.local

# Certificate files
*.pem
*.key
*.crt
*.csr

# Application logs
app.log
error.log
access.log

# Profiling
*.prof

# Lock files (keep package-lock.json but ignore others)
yarn.lock
poetry.lock

# Cache directories
.cache/
*.cache

# Temporary files
*.tmp
*.temp

# FastAPI/Uvicorn specific
.uvicorn/

# Pytest
.pytest_cache/
test-results/

# mypy
.mypy_cache/

# Ruff
.ruff_cache/

# Local configuration overrides
config.local.py
settings.local.py
local_settings.py

# Documentation builds
docs/_build/
docs/build/

# Jupyter notebooks
*.ipynb

# Data files that shouldn't be committed
data/
datasets/
*.csv
*.json
*.xml
*.xlsx
*.xls

# ML model files
*.pkl
*.pickle
*.model
*.h5
*.pb

# Virtual environment activation scripts
activate
activate.bat
activate.fish
activate.ps1

# Sensitive information and scripts
# Deployment and automation scripts
deploy.sh
deploy.py
setup.sh
install.sh
build.sh
run.sh
start.sh
stop.sh
restart.sh
*.deploy
*.deployment

# Configuration files with sensitive data
config.ini
config.yaml
config.yml
settings.ini
settings.yaml
settings.yml
*.config
*.conf

# Authentication and security files
*.token
*.jwt
*.secret
*.secrets
secrets/
auth/
credentials/
keys/
tokens/
.auth
.credentials
.secrets
.tokens
api_keys.py
api_keys.json
api_keys.txt
secret_key.py
secret_key.txt

# Database connection strings and credentials
db_config.py
db_config.json
db_config.yaml
database.ini
database.conf
connection_string.txt

# Third-party service credentials
aws_credentials
.aws/
gcp_credentials.json
.gcp/
azure_credentials
.azure/

# SSH and SSL keys
id_rsa
id_rsa.pub
id_ed25519
id_ed25519.pub
*.ppk
*.p12
*.pfx

# Environment-specific files
.env.*
!.env.example
!.env.template
!.env.sample

# Backup and temporary sensitive files
*.backup.sql
*.dump
*.sql.gz
*.bak.sql
backup/
dumps/

# Application-specific sensitive files
user_data/
private/
sensitive/
confidential/
internal/

# Monitoring and analytics
*.analytics
*.metrics
*.monitoring
monitoring/
metrics/
analytics/

# CI/CD sensitive files
.github/workflows/*.yml
!.github/workflows/public-*.yml
.gitlab-ci.yml
.travis.yml
circle.yml
Jenkinsfile
*.pipeline

# Docker secrets
docker-compose.prod.yml
docker-compose.staging.yml
.docker/
secrets.yml

# Lambda and serverless configs
serverless.yml
.serverless/
lambda_config.json

# Local development overrides
local.py
local.json
local.yaml
dev.py
dev.json
dev.yaml

# Test data with sensitive information
test_data/
fixtures/
sample_data/
*.test.json
*.test.yaml

# Logs that might contain sensitive data
audit.log
security.log
access_*.log
error_*.log
debug_*.log
trace_*.log

# Lambda and testing scripts
test_lambda.py
build_lambda.sh
